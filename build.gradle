buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    }
}

apply plugin: 'scala'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
}

dependencies{
    compile fileTree(dir: 'lib', include: '*.jar')
    compile files('lib/dx.jar')
    compile files('lib/asm-all-5.0.4.jar')
    compile "org.scala-lang:scala-library:2.11.7"
}

task run(type: JavaExec, dependsOn: classes) {
    if(project.hasProperty('appArgs')){
        args(appArgs.split(','))
    }
    if (args[0] == '-e' && args.size() == 3) {
        classpath args[2]
    }
    main = 'com.github.jllk.analyser.Entry'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

def mainClass = 'com.github.jllk.analyser.Entry'

jar {
    baseName = 'jllk-cda'

    manifest {
        attributes 'Main-Class': mainClass
        attributes 'Version': project.libVersion
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

apply from: 'publish.gradle'